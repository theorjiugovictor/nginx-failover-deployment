events {
    worker_connections 1024;
}

http {
    # Define custom log format with pool and upstream details
    log_format detailed '[$time_local] '
                       'method=$request_method '
                       'uri=$request_uri '
                       'status=$status '
                       'pool=$upstream_http_x_app_pool '
                       'release=$upstream_http_x_release_id '
                       'upstream_addr=$upstream_addr '
                       'upstream_status=$upstream_status '
                       'request_time=$request_time '
                       'upstream_response_time=$upstream_response_time '
                       'client=$remote_addr';

    # Access log using the custom format
    access_log /var/log/nginx/access_real.log detailed;
    error_log /var/log/nginx/error.log warn;

    # Upstream configuration for Blue/Green deployment
    upstream app_backend {
        # Active pool (primary)
        server app_ACTIVE_POOL:APP_PORT max_fails=2 fail_timeout=5s;
        
        # Backup pool (standby)
        server app_BACKUP_POOL:APP_PORT backup;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy settings to preserve headers and handle failures
        proxy_pass_request_headers on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeout settings - aggressive for fast failover
        proxy_connect_timeout 2s;
        proxy_send_timeout 3s;
        proxy_read_timeout 3s;

        # Retry configuration
        proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 2;
        proxy_next_upstream_timeout 8s;

        # Main location block
        location / {
            proxy_pass http://app_backend;
            
            # Ensure app headers are forwarded to client
            proxy_pass_header X-App-Pool;
            proxy_pass_header X-Release-Id;
            
            # Disable buffering for immediate response
            proxy_buffering off;
        }

        # Health check endpoint
        location /healthz {
            proxy_pass http://app_backend/healthz;
        }

        # Version endpoint
        location /version {
            proxy_pass http://app_backend/version;
        }

        # Chaos endpoints (for testing)
        location /chaos/ {
            proxy_pass http://app_backend;
        }

        # Error injection endpoint for alert testing
        location /failme {
            return 500;
        }

        # Nginx status (optional, for monitoring)
        location /nginx_status {
            stub_status on;
            access_log off;
        }
    }
}
