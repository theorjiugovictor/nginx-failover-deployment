services:
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    ports:
      - "8081:${PORT:-3000}"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=${PORT:-3000}
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    ports:
      - "8082:${PORT:-3000}"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=${PORT:-3000}
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:${PORT:-3000}/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - app_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: nginx_lb
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf.template:/etc/nginx/templates/nginx.conf.template:ro
      - ./entrypoint.sh:/docker-entrypoint.d/40-generate-config.sh:ro
      - nginx_logs:/var/log/nginx  # Shared volume for logs
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}
      - PORT=${PORT:-3000}
    depends_on:
      app_blue:
        condition: service_healthy
      app_green:
        condition: service_healthy
    networks:
      - app_network
    restart: unless-stopped
    command: >
      /bin/sh -c "
      /bin/sh /docker-entrypoint.d/40-generate-config.sh &&
      nginx -g 'daemon off;'
      "

  alert_watcher:
    image: python:3.11-alpine
    container_name: alert_watcher
    volumes:
      - ./watcher.py:/app/watcher.py:ro
      - ./requirements.txt:/app/requirements.txt:ro
      - nginx_logs:/var/log/nginx:ro  # Read-only access to Nginx logs
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL}
      - ERROR_RATE_THRESHOLD=${ERROR_RATE_THRESHOLD:-2.0}
      - WINDOW_SIZE=${WINDOW_SIZE:-200}
      - ALERT_COOLDOWN_SEC=${ALERT_COOLDOWN_SEC:-300}
      - NGINX_LOG_FILE=/var/log/nginx/access.log
      - ACTIVE_POOL=${ACTIVE_POOL:-blue}
      - MAINTENANCE_MODE=${MAINTENANCE_MODE:-false}
    working_dir: /app
    command: >
      /bin/sh -c "
      pip install --no-cache-dir -r requirements.txt &&
      python -u watcher.py
      "
    depends_on:
      - nginx
    networks:
      - app_network
    restart: unless-stopped

networks:
  app_network:
    driver: bridge

volumes:
  nginx_logs:  # Shared volume for logs between Nginx and watcher
